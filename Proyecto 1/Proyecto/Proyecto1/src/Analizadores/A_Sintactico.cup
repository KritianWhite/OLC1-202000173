package Analizadores;
import java_cup.runtime.*;

parser code 
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }  
:}

terminal String PR_INICIO, PR_FIN, PR_INGRESAR, PR_COMO, PR_CON_VALOR, PR_ASIGNACION, PR_SI;
terminal String PR_ENTONCES, PR_DE_LO_CONTRARIO, PR_O_SI, PR_FIN_SI, PR_SEGUN, PR_HACER;
terminal String PR_FIN_SEGUN, PR_PARA, PR_HASTA, PR_CON_INCREMENTAL, PR_FIN_PARA;
terminal String PR_MIENTRAS, PR_FIN_MIENTRAS, PR_REPETIR, PR_HASTA_QUE, PR_RETORNAR;
terminal String PR_EJECUTAR, PR_IMPRIMIR, PR_IMPRIMIR_NL, PR_METODO, PR_CON_PARAMETROS;
terminal String PR_FIN_METODO, PR_FUNCION, PR_FIN_FUNCION, PR_NUMERO, PR_CADENA, PR_BOOLEAN;
terminal String PR_CARACTER, OP_AND, OP_OR, OP_SUMA, OP_RESTA, OP_MULTIPLICACION, OP_DIVISION;
terminal String OP_POTENCIA, OP_MODULO, OP_MAYOR_QUE, OP_MENOR_QUE, OP_IGUAL, OP_ES_DIFERENTE;
terminal String OP_MAYOR_IGUAL, OP_MENOR_IGUAL, SB_PARENTESIS_LEFT, SB_PARENTESIS_RIGHT;
terminal String SB_PUNTO_Y_COMA, SB_COMA, yycolumn, SB_INTERROGACION_LEFT, SB_INTERROGACION_RIGHT;
terminal String COMENTARIO1, COMENTARIO2, CARACTER, BOOLEAN, IDENTIFICADOR, CARACTER_E, CADENA, DIGITOS;

non terminal codigo, instrucciones;
non terminal comentarios, declaracion, asignacion, tipo_dato, expresiones, ciclos;
non terminal operacion, expresion;
non terminal lista_variables;
non terminal termino, factor;
non terminal if, if1, if2, o_si, delo_contrario;
non terminal condicion;
non terminal segun, segun_contrario;
non terminal para;
non terminal repetir;




precedence left OP_SUMA, OP_RESTA;
precedence left OP_MULTIPLICACION, OP_DIVISION;
precedence left OP_MODULO, OP_POTENCIA;


start with codigo;


codigo ::= PR_INICIO instrucciones;

instrucciones ::= comentarios | declaracion | tipo_dato | asignacion | ciclos;

comentarios::= COMENTARIO1 | COMENTARIO2;

declaracion ::= PR_INGRESAR lista_variables PR_COMO tipo_dato PR_CON_VALOR expresiones;

tipo_dato ::= PR_NUMERO | PR_CADENA | PR_BOOLEAN | PR_CARACTER;

expresiones ::= expresion | operacion;

expresion ::= CADENA | BOOLEAN | CARACTER;

operacion ::= operacion OP_SUMA termino;
operacion ::= operacion OP_RESTA termino;
operacion ::= termino;
termino ::= termino OP_MULTIPLICACION factor;
termino ::= termino OP_DIVISION factor;
termino ::= factor;
factor ::= SB_PARENTESIS_LEFT operacion SB_PARENTESIS_RIGHT;
factor ::= DIGITOS;

lista_variables ::= IDENTIFICADOR SB_COMA lista_variables | IDENTIFICADOR;

asignacion ::= lista_variables PR_ASIGNACION expresiones;

ciclos ::= if | segun | para | repetir;

if ::= if1 | if2;
if1 ::= PR_SI condicion PR_ENTONCES
       instrucciones
       PR_FIN_SI;
if2 ::= PR_SI condicion
       instrucciones
       delo_contrario | o_si PR_FIN_SI;
o_si ::= PR_O_SI condicion PR_ENTONCES
         instrucciones;
delo_contrario ::= instrucciones;
condicion ::= IDENTIFICADOR OP_IGUAL condicion | IDENTIFICADOR;

segun ::= PR_SEGUN IDENTIFICADOR PR_HACER 
          SB_INTERROGACION_LEFT DIGITOS SB_INTERROGACION_RIGHT PR_ENTONCES
          instrucciones
          segun_contrario | PR_FIN_SEGUN;
segun_contrario ::= PR_DE_LO_CONTRARIO PR_ENTONCES
                    instrucciones;



para ::= PR_PARA IDENTIFICADOR PR_ASIGNACION expresiones PR_HASTA expresiones PR_HACER
         instrucciones
         PR_FIN_PARA;

mientras ::= PR_MIENTRAS condicion PR_HACER
             instrucciones
             PR_FIN_MIENTRAS;

repetir ::= PR_REPETIR
            instrucciones
            PR_HASTA_QUE condicion;
